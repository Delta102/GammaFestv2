// <auto-generated />
using System;
using GAMMAFEST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GAMMAFEST.Migrations
{
    [DbContext(typeof(ContextoDb))]
    [Migration("20221123030721_dataMigration1")]
    partial class dataMigration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GAMMAFEST.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComentario"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaComentario")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdComentario");

                    b.HasIndex("EventoId");

                    b.HasIndex("IdUser");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("GAMMAFEST.Models.Entrada", b =>
                {
                    b.Property<int>("EntradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntradaId"));

                    b.Property<int>("CantidadEntradas")
                        .HasColumnType("int");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("IdCantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.Property<string>("TextoQR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntradaId");

                    b.HasIndex("EventoId");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("GAMMAFEST.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventoId"));

                    b.Property<float>("AforoMaximo")
                        .HasColumnType("real");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaInicioEvento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioEntradaUnit")
                        .HasColumnType("real");

                    b.Property<string>("Protocolos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventoId");

                    b.HasIndex("IdUser");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("GAMMAFEST.Models.RegistroAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntradaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntradaId");

                    b.ToTable("RegistroAsistencia");
                });

            modelBuilder.Entity("GAMMAFEST.Models.UserPromotor", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cifrado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("UserPromotor");
                });

            modelBuilder.Entity("GAMMAFEST.Models.Comentario", b =>
                {
                    b.HasOne("GAMMAFEST.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId");

                    b.HasOne("GAMMAFEST.Models.UserPromotor", "UserPromotor")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("Evento");

                    b.Navigation("UserPromotor");
                });

            modelBuilder.Entity("GAMMAFEST.Models.Entrada", b =>
                {
                    b.HasOne("GAMMAFEST.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GAMMAFEST.Models.Evento", b =>
                {
                    b.HasOne("GAMMAFEST.Models.UserPromotor", "UserPromotor")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserPromotor");
                });

            modelBuilder.Entity("GAMMAFEST.Models.RegistroAsistencia", b =>
                {
                    b.HasOne("GAMMAFEST.Models.Entrada", "Entrada")
                        .WithMany()
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrada");
                });
#pragma warning restore 612, 618
        }
    }
}
